{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","name","email","className","href","TodoInfo","title","person","key","TodoList","todos","map","card","id","username","completed","userId","todo","usersFromServer","find","user","App","useState","newtitle","setTitle","idOfTodo","setId","setName","titleError","setTitleError","personError","setPersonError","foundPerson","newUserId","undefined","newObj","onSubmit","event","preventDefault","type","required","onChange","target","value","placeholder","onClick","current","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9c40213.chunk.js","sourcesContent":["import React from 'react';\n\ninterface User {\n  name: string,\n  email: string,\n}\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => (\n  <a className=\"UserInfo\" href={email}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport { TodosInterFace } from '../../api/todos';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo: React.FC<TodosInterFace> = ({\n  title,\n  person,\n}) => (\n  <article className=\"TodoInfo TodoInfo--completed\">\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n    {person && <UserInfo {...person} key={title} />}\n  </article>\n);\n","import React from 'react';\nimport { TodosInterFace } from '../../api/todos';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: TodosInterFace[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map((card) => (\n      <div key={card.id}>\n        <TodoInfo {...card} key={card.id} />\n      </div>\n    ))}\n  </section>\n);\n","export interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nexport default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState, FormEvent } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer, { User } from './api/users';\nimport todoList, { TodosInterFace } from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: TodosInterFace[] = todoList.map(todo => ({\n  ...todo,\n  person: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [newtitle, setTitle] = useState('');\n  const [idOfTodo, setId] = useState(16);\n  const [name, setName] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [personError, setPersonError] = useState(false);\n\n  const foundPerson = usersFromServer.find(user => user.name === name);\n\n  let newUserId = foundPerson?.id;\n\n  if (newUserId === undefined) {\n    newUserId = 0;\n  }\n\n  const newObj: TodosInterFace = {\n    id: idOfTodo,\n    title: newtitle,\n    completed: false,\n    userId: newUserId,\n    person: {\n      id: 1,\n      name,\n      username: name,\n      email: '',\n    },\n  };\n\n  const newTodo = () => {\n    if (newObj.person?.name !== '' && newtitle !== '') {\n      setId(current => current + 1);\n      todos.push(newObj);\n    }\n\n    if (newtitle === '') {\n      setTitleError(current => !current);\n    }\n\n    if (newObj.person?.name === '') {\n      setPersonError(current => !current);\n    }\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            required\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n          <span className=\"error\">{titleError && 'Please enter a title'}</span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            placeholder=\"Chose a user\"\n            required\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          >\n            <option value=\"person\">\n              Chose a user\n            </option>\n            {usersFromServer.map((user) => {\n              return (\n                <option value={user.name}>\n                  {' '}\n                  {user.name}\n                  {' '}\n                </option>\n              );\n            })}\n          </select>\n\n          <span className=\"error\">{personError && 'Please choose a user'}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={newTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n      </section>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import { User } from './users';\n\nexport interface TodosInterFace {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  person: User | null,\n}\n\nexport default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}