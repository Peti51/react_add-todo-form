{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","name","email","className","href","TodoInfo","title","user","TodoList","todos","map","card","id","username","completed","userId","todo","usersFromServer","find","App","useState","newtitle","setTitle","idOfTodo","setId","setName","titleError","setTitleError","personError","setPersonError","newUserId","person","newObj","action","method","onSubmit","event","preventDefault","type","onChange","target","value","placeholder","onClick","current","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c70df26.chunk.js","sourcesContent":["import React from 'react';\n\ninterface User {\n  name: string,\n  email: string,\n}\n\nexport const UserInfo: React.FC<User> = ({ name, email }) => (\n  <a className=\"UserInfo\" href={email}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport { TodosInterFace } from '../../api/todos';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo: React.FC<TodosInterFace> = ({\n  title,\n  user,\n}) => (\n  <article className=\"TodoInfo TodoInfo--completed\">\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n    {user && <UserInfo {...user} />}\n  </article>\n);\n","import React from 'react';\nimport { TodosInterFace } from '../../api/todos';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: TodosInterFace[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map((card) => (\n      <TodoInfo {...card} />\n    ))}\n  </section>\n);\n","export interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nexport default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState, FormEvent } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer, { User } from './api/users';\nimport todoList, { TodosInterFace } from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const todos: TodosInterFace[] = todoList.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  // const todoCopy = todos;\n  const [newtitle, setTitle] = useState('');\n  const [idOfTodo, setId] = useState(16);\n  const [name, setName] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [personError, setPersonError] = useState(false);\n\n  let newUserId = 0;\n\n  usersFromServer.map((person) => {\n    if (person.name === name) {\n      newUserId = person.id;\n    }\n\n    return 0;\n  });\n\n  const newObj: TodosInterFace = {\n    id: idOfTodo,\n    title: newtitle,\n    completed: false,\n    userId: newUserId,\n    user: {\n      id: 1,\n      name: '',\n      username: '',\n      email: '',\n    },\n  };\n\n  const newTodo = () => {\n    if (newObj.user?.name !== '' && newtitle !== '') {\n      setId(current => current + 1);\n      todos.push(newObj);\n    }\n\n    if (newtitle === '') {\n      setTitleError(current => !current);\n    }\n\n    if (newObj.user?.name === '') {\n      setPersonError(current => !current);\n    }\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n          <span className=\"error\">{titleError && 'Please enter a title'}</span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            placeholder=\"Chose a user\"\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          >\n            <option\n              value=\"person\"\n\n            >\n              Chose a user\n\n            </option>\n            {usersFromServer.map((person) => {\n              return (\n                <option value={person.name}>\n                  {' '}\n                  {person.name}\n                  {' '}\n                </option>\n              );\n            })}\n          </select>\n\n          <span className=\"error\">{personError && 'Please choose a user'}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={newTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n      </section>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import { User } from './users';\n\nexport interface TodosInterFace {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  user: User | null,\n}\n\nexport default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}