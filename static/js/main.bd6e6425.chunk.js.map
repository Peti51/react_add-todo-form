{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","email","name","className","href","TodoInfo","title","person","key","TodoList","todos","map","card","id","username","completed","userId","App","useState","newtitle","setTitle","idOfTodo","setId","setName","titleError","setTitleError","personError","setPersonError","todoList","todosArr","setTodos","finishedArr","todo","usersFromServer","find","user","foundPerson","newUserId","undefined","newObj","onSubmit","event","preventDefault","type","required","placeholder","value","onChange","target","disabled","selected","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd6e6425.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string\n  email: string\n}\n\nexport const UserInfo: React.FC<Props> = ({ email, name }) => (\n  <a className=\"UserInfo\" href={email}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport { TodosInterFace } from '../../api/todos';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo: React.FC<TodosInterFace> = ({\n  title,\n  person,\n}) => (\n  <article className=\"TodoInfo TodoInfo--completed\">\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n    {person && <UserInfo {...person} key={title} />}\n  </article>\n);\n","import React from 'react';\nimport { TodosInterFace } from '../../api/todos';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: TodosInterFace[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map((card) => (\n      <div>\n        <TodoInfo {...card} key={card.id} />\n      </div>\n    ))}\n  </section>\n);\n","export interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nexport default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from './users';\n\nexport interface TodosInterFace {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  person: User | null,\n}\n\nexport default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState, FormEvent } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer, { User } from './api/users';\nimport todoList, { TodosInterFace } from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [newtitle, setTitle] = useState('');\n  const [idOfTodo, setId] = useState(16);\n  const [name, setName] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [personError, setPersonError] = useState(false);\n  const [todosArr, setTodos] = useState(todoList);\n\n  const placeHolder = 'Enter a title';\n\n  const finishedArr: TodosInterFace[] = todosArr.map(todo => ({\n    ...todo,\n    person: getUser(todo.userId),\n  }));\n\n  const foundPerson = usersFromServer.find(user => {\n    return user.name === name;\n  });\n\n  let newUserId = foundPerson?.id;\n\n  if (newUserId === undefined) {\n    newUserId = 0;\n  }\n\n  const newObj: TodosInterFace = {\n    id: idOfTodo,\n    title: newtitle,\n    completed: false,\n    userId: newUserId,\n    person: {\n      id: newUserId,\n      name,\n      username: name,\n      email: 'Sincere@april.biz',\n    },\n  };\n\n  const newTodo = () => {\n    if (newObj.person?.name !== '' && newtitle !== '') {\n      setId(current => current + 1);\n      setTodos([...todosArr, newObj]);\n      setPersonError(false);\n      setTitleError(false);\n      setTitle('');\n      setName('');\n    }\n\n    if (newtitle === '') {\n      setTitleError(true);\n    } else if (newtitle !== '') {\n      setTitleError(false);\n    }\n\n    if (name === '') {\n      setPersonError(true);\n    } else if (name !== '') {\n      setPersonError(false);\n    }\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form onSubmit={handleSubmit} id=\"create-course-form\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            required\n            placeholder={placeHolder}\n            value={newtitle}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n          <span className=\"error\">{titleError && 'Please enter a title'}</span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            required\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          >\n            <option value=\"\" disabled selected>Choose user</option>\n            {usersFromServer.map((user) => {\n              return (\n                <option value={user.name} key={user.name}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n\n          <span className=\"error\">{personError && 'Please choose a user'}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={newTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={finishedArr} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}